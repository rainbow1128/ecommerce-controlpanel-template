[{"D:\\xampp\\htdocs\\www\\ecommerce\\frontend\\src\\index.js":"1","D:\\xampp\\htdocs\\www\\ecommerce\\frontend\\src\\components\\layout\\NavBar.js":"2","D:\\xampp\\htdocs\\www\\ecommerce\\frontend\\src\\components\\layout\\Sidebar.js":"3","D:\\xampp\\htdocs\\www\\ecommerce\\frontend\\src\\components\\ui\\Cards\\Card.js":"4","D:\\xampp\\htdocs\\www\\ecommerce\\frontend\\src\\components\\ui\\Cards\\CardMenu.js":"5","D:\\xampp\\htdocs\\www\\ecommerce\\frontend\\src\\components\\pages\\products\\ProductScreen.js":"6","D:\\xampp\\htdocs\\www\\ecommerce\\frontend\\src\\components\\pages\\users\\UserScreen.js":"7","D:\\xampp\\htdocs\\www\\ecommerce\\frontend\\src\\components\\pages\\dashboard\\DashboardScreen.js":"8","D:\\xampp\\htdocs\\www\\ecommerce\\frontend\\src\\components\\ui\\Icons\\PlusIcon.js":"9","D:\\xampp\\htdocs\\www\\ecommerce\\frontend\\src\\components\\ui\\Buttons\\Btn.js":"10","D:\\xampp\\htdocs\\www\\ecommerce\\frontend\\src\\components\\pages\\auth\\RegisterScreen.js":"11","D:\\xampp\\htdocs\\www\\ecommerce\\frontend\\src\\components\\pages\\auth\\LoginScreen.js":"12","D:\\xampp\\htdocs\\www\\ecommerce\\frontend\\src\\components\\pages\\auth\\RecoverScreen.js":"13","D:\\xampp\\htdocs\\www\\ecommerce\\frontend\\src\\router\\AppRouter.js":"14","D:\\xampp\\htdocs\\www\\ecommerce\\frontend\\src\\router\\PublicRouter.js":"15","D:\\xampp\\htdocs\\www\\ecommerce\\frontend\\src\\router\\PrivateRouter.js":"16","D:\\xampp\\htdocs\\www\\ecommerce\\frontend\\src\\hooks\\useForm.js":"17","D:\\xampp\\htdocs\\www\\ecommerce\\frontend\\src\\actions\\auth.js":"18","D:\\xampp\\htdocs\\www\\ecommerce\\frontend\\src\\helpers\\fetch.js":"19","D:\\xampp\\htdocs\\www\\ecommerce\\frontend\\src\\types\\types.js":"20","D:\\xampp\\htdocs\\www\\ecommerce\\frontend\\src\\store\\store.js":"21","D:\\xampp\\htdocs\\www\\ecommerce\\frontend\\src\\reducers\\rootReducer.js":"22","D:\\xampp\\htdocs\\www\\ecommerce\\frontend\\src\\reducers\\uiReducer.js":"23","D:\\xampp\\htdocs\\www\\ecommerce\\frontend\\src\\reducers\\authReducer.js":"24","D:\\xampp\\htdocs\\www\\ecommerce\\frontend\\src\\components\\ui\\Buttons\\BtnSubmit.js":"25","D:\\xampp\\htdocs\\www\\ecommerce\\frontend\\src\\reducers\\tokenReducer.js":"26","D:\\xampp\\htdocs\\www\\ecommerce\\frontend\\src\\actions\\token.js":"27","D:\\xampp\\htdocs\\www\\ecommerce\\frontend\\src\\actions\\ui.js":"28","D:\\xampp\\htdocs\\www\\ecommerce\\frontend\\src\\components\\pages\\auth\\ResetPassword.js":"29","D:\\xampp\\htdocs\\www\\ecommerce\\frontend\\src\\reducers\\userReducer.js":"30","D:\\xampp\\htdocs\\www\\ecommerce\\frontend\\src\\actions\\users.js":"31","D:\\xampp\\htdocs\\www\\ecommerce\\frontend\\src\\helpers\\fileUpload.js":"32","D:\\xampp\\htdocs\\www\\ecommerce\\frontend\\src\\helpers\\swalCustom.js":"33","D:\\xampp\\htdocs\\www\\ecommerce\\frontend\\src\\Admin.js":"34","D:\\xampp\\htdocs\\www\\ecommerce\\frontend\\src\\Ecommerce.js":"35","D:\\xampp\\htdocs\\www\\ecommerce\\frontend\\src\\actions\\products.js":"36","D:\\xampp\\htdocs\\www\\ecommerce\\frontend\\src\\reducers\\productReducer.js":"37","D:\\xampp\\htdocs\\www\\ecommerce\\frontend\\src\\components\\ui\\Tables\\ProductTable.js":"38","D:\\xampp\\htdocs\\www\\ecommerce\\frontend\\src\\components\\ui\\Tables\\UserTable.js":"39","D:\\xampp\\htdocs\\www\\ecommerce\\frontend\\src\\reducers\\categoryReducer.js":"40","D:\\xampp\\htdocs\\www\\ecommerce\\frontend\\src\\actions\\categories.js":"41","D:\\xampp\\htdocs\\www\\ecommerce\\frontend\\src\\components\\ui\\Buttons\\BtnFloat.js":"42","D:\\xampp\\htdocs\\www\\ecommerce\\frontend\\src\\components\\ui\\Forms\\ProductForm.js":"43","D:\\xampp\\htdocs\\www\\ecommerce\\frontend\\src\\components\\shared\\Modal.js":"44","D:\\xampp\\htdocs\\www\\ecommerce\\frontend\\src\\components\\shared\\DateComponent.js":"45","D:\\xampp\\htdocs\\www\\ecommerce\\frontend\\src\\components\\pages\\categories\\CategoryScreen.js":"46","D:\\xampp\\htdocs\\www\\ecommerce\\frontend\\src\\components\\ui\\Banners\\Banner.js":"47"},{"size":328,"mtime":1614163620633,"results":"48","hashOfConfig":"49"},{"size":1780,"mtime":1612271431007,"results":"50","hashOfConfig":"49"},{"size":2738,"mtime":1614693533913,"results":"51","hashOfConfig":"49"},{"size":321,"mtime":1611604877871,"results":"52","hashOfConfig":"49"},{"size":1077,"mtime":1611579953506,"results":"53","hashOfConfig":"49"},{"size":2405,"mtime":1615301522986,"results":"54","hashOfConfig":"49"},{"size":8583,"mtime":1614868953075,"results":"55","hashOfConfig":"49"},{"size":6798,"mtime":1614778922672,"results":"56","hashOfConfig":"49"},{"size":1512,"mtime":1611604587727,"results":"57","hashOfConfig":"49"},{"size":1093,"mtime":1614171132170,"results":"58","hashOfConfig":"49"},{"size":3343,"mtime":1614283287915,"results":"59","hashOfConfig":"49"},{"size":3085,"mtime":1614283161554,"results":"60","hashOfConfig":"49"},{"size":2026,"mtime":1612358616608,"results":"61","hashOfConfig":"49"},{"size":4001,"mtime":1614110250551,"results":"62","hashOfConfig":"49"},{"size":628,"mtime":1612872421340,"results":"63","hashOfConfig":"49"},{"size":601,"mtime":1614086050858,"results":"64","hashOfConfig":"49"},{"size":644,"mtime":1615376456817,"results":"65","hashOfConfig":"49"},{"size":3417,"mtime":1614091102094,"results":"66","hashOfConfig":"49"},{"size":2358,"mtime":1615379868939,"results":"67","hashOfConfig":"49"},{"size":1113,"mtime":1614686903037,"results":"68","hashOfConfig":"49"},{"size":394,"mtime":1611751860719,"results":"69","hashOfConfig":"49"},{"size":544,"mtime":1614258267516,"results":"70","hashOfConfig":"49"},{"size":513,"mtime":1612271154278,"results":"71","hashOfConfig":"49"},{"size":659,"mtime":1612959965160,"results":"72","hashOfConfig":"49"},{"size":1131,"mtime":1614255490016,"results":"73","hashOfConfig":"49"},{"size":708,"mtime":1611847519340,"results":"74","hashOfConfig":"49"},{"size":301,"mtime":1611845423145,"results":"75","hashOfConfig":"49"},{"size":187,"mtime":1612271119562,"results":"76","hashOfConfig":"49"},{"size":3168,"mtime":1614283468853,"results":"77","hashOfConfig":"49"},{"size":667,"mtime":1612959407128,"results":"78","hashOfConfig":"49"},{"size":3364,"mtime":1614088367116,"results":"79","hashOfConfig":"49"},{"size":919,"mtime":1613572017976,"results":"80","hashOfConfig":"49"},{"size":331,"mtime":1614076369108,"results":"81","hashOfConfig":"49"},{"size":1347,"mtime":1614692661151,"results":"82","hashOfConfig":"49"},{"size":154,"mtime":1614085899578,"results":"83","hashOfConfig":"49"},{"size":3885,"mtime":1615382506332,"results":"84","hashOfConfig":"49"},{"size":740,"mtime":1614685155372,"results":"85","hashOfConfig":"49"},{"size":12037,"mtime":1615384812140,"results":"86","hashOfConfig":"49"},{"size":10983,"mtime":1614282640643,"results":"87","hashOfConfig":"49"},{"size":389,"mtime":1614258314772,"results":"88","hashOfConfig":"49"},{"size":696,"mtime":1614258150231,"results":"89","hashOfConfig":"49"},{"size":365,"mtime":1614282005452,"results":"90","hashOfConfig":"49"},{"size":9967,"mtime":1615387076263,"results":"91","hashOfConfig":"49"},{"size":850,"mtime":1614981468377,"results":"92","hashOfConfig":"49"},{"size":342,"mtime":1612274825924,"results":"93","hashOfConfig":"49"},{"size":1500,"mtime":1614779900144,"results":"94","hashOfConfig":"49"},{"size":1373,"mtime":1614791880797,"results":"95","hashOfConfig":"49"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},"hnddw0",{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"98"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"98"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"98"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"188"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195","usedDeprecatedRules":"98"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},"D:\\xampp\\htdocs\\www\\ecommerce\\frontend\\src\\index.js",[],["198","199"],"D:\\xampp\\htdocs\\www\\ecommerce\\frontend\\src\\components\\layout\\NavBar.js",[],"D:\\xampp\\htdocs\\www\\ecommerce\\frontend\\src\\components\\layout\\Sidebar.js",[],"D:\\xampp\\htdocs\\www\\ecommerce\\frontend\\src\\components\\ui\\Cards\\Card.js",[],"D:\\xampp\\htdocs\\www\\ecommerce\\frontend\\src\\components\\ui\\Cards\\CardMenu.js",[],"D:\\xampp\\htdocs\\www\\ecommerce\\frontend\\src\\components\\pages\\products\\ProductScreen.js",["200"],"import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nimport { Card } from '../../ui/Cards/Card'\r\nimport { ProductTable } from '../../ui/Tables/ProductTable'\r\nimport { DateComponent } from '../../shared/DateComponent'\r\n\r\nimport { startGettingCategories } from '../../../actions/categories'\r\nimport { startGettingProducts } from '../../../actions/products'\r\nimport { Banner } from '../../ui/Banners/Banner'\r\n\r\nexport const ProductScreen = () => {\r\n   \r\n    \r\n    const dispatch = useDispatch();\r\n    useEffect(() => {\r\n        dispatch(startGettingProducts());\r\n        dispatch(startGettingCategories());\r\n    }, [dispatch])\r\n    \r\n    // Table\r\n    const {products} = useSelector(state => state.products)\r\n    const colums = [\"Name\",\"Description\",\"Price\",\"In discount?\",\"Discount\",\"Status\",\"Created_at\", \"Actions\"]\r\n\r\n    // Banners\r\n    const productsPublic = products.filter( product => product.status === 1).length;\r\n    const productsDrafts = products.filter( product => product.status === 0).length;\r\n    const productsOnDeals = products.filter( product => product.in_discount === 1).length;\r\n\r\n    return (\r\n        <>\r\n            <div className=\"container\">\r\n                <div>\r\n                    <h1>Products</h1>\r\n                    <DateComponent/>\r\n                </div>\r\n                <div className=\"flex-break\"><br/></div>\r\n                <div className=\"row justify-content-se\">\r\n                    <Banner color=\"success\" md=\"3\" sm=\"12\" css=\"m-1\" icon=\"fas fa-check\" type=\"rectangle\">\r\n                        <p>{productsPublic}</p>\r\n                        <small>Products public</small>\r\n                    </Banner>\r\n\r\n                    <Banner color=\"danger\" md=\"3\" sm=\"12\" css=\"m-1\" icon=\"fas fa-trash\" type=\"square\">\r\n                        <p>{productsDrafts}</p>\r\n                        <small>Products drafts</small>\r\n                    </Banner>\r\n\r\n                    <Banner color=\"blue\" md=\"3\" sm=\"12\" css=\"m-1\" icon=\"fas fa-percent\" type=\"circle\">\r\n                        <p>{productsOnDeals}</p>\r\n                        <small>Discounts active</small>\r\n                    </Banner>\r\n                    \r\n                </div>\r\n                <div className=\"row\">\r\n                    <ProductTable columns={colums} data={products}/>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","D:\\xampp\\htdocs\\www\\ecommerce\\frontend\\src\\components\\pages\\users\\UserScreen.js",[],"D:\\xampp\\htdocs\\www\\ecommerce\\frontend\\src\\components\\pages\\dashboard\\DashboardScreen.js",[],"D:\\xampp\\htdocs\\www\\ecommerce\\frontend\\src\\components\\ui\\Icons\\PlusIcon.js",[],["201","202"],"D:\\xampp\\htdocs\\www\\ecommerce\\frontend\\src\\components\\ui\\Buttons\\Btn.js",[],"D:\\xampp\\htdocs\\www\\ecommerce\\frontend\\src\\components\\pages\\auth\\RegisterScreen.js",[],"D:\\xampp\\htdocs\\www\\ecommerce\\frontend\\src\\components\\pages\\auth\\LoginScreen.js",[],"D:\\xampp\\htdocs\\www\\ecommerce\\frontend\\src\\components\\pages\\auth\\RecoverScreen.js",[],"D:\\xampp\\htdocs\\www\\ecommerce\\frontend\\src\\router\\AppRouter.js",[],"D:\\xampp\\htdocs\\www\\ecommerce\\frontend\\src\\router\\PublicRouter.js",[],"D:\\xampp\\htdocs\\www\\ecommerce\\frontend\\src\\router\\PrivateRouter.js",[],"D:\\xampp\\htdocs\\www\\ecommerce\\frontend\\src\\hooks\\useForm.js",[],"D:\\xampp\\htdocs\\www\\ecommerce\\frontend\\src\\actions\\auth.js",[],"D:\\xampp\\htdocs\\www\\ecommerce\\frontend\\src\\helpers\\fetch.js",[],"D:\\xampp\\htdocs\\www\\ecommerce\\frontend\\src\\types\\types.js",[],"D:\\xampp\\htdocs\\www\\ecommerce\\frontend\\src\\store\\store.js",[],"D:\\xampp\\htdocs\\www\\ecommerce\\frontend\\src\\reducers\\rootReducer.js",[],"D:\\xampp\\htdocs\\www\\ecommerce\\frontend\\src\\reducers\\uiReducer.js",[],"D:\\xampp\\htdocs\\www\\ecommerce\\frontend\\src\\reducers\\authReducer.js",[],"D:\\xampp\\htdocs\\www\\ecommerce\\frontend\\src\\components\\ui\\Buttons\\BtnSubmit.js",[],"D:\\xampp\\htdocs\\www\\ecommerce\\frontend\\src\\reducers\\tokenReducer.js",[],"D:\\xampp\\htdocs\\www\\ecommerce\\frontend\\src\\actions\\token.js",[],"D:\\xampp\\htdocs\\www\\ecommerce\\frontend\\src\\actions\\ui.js",[],"D:\\xampp\\htdocs\\www\\ecommerce\\frontend\\src\\components\\pages\\auth\\ResetPassword.js",[],"D:\\xampp\\htdocs\\www\\ecommerce\\frontend\\src\\reducers\\userReducer.js",[],"D:\\xampp\\htdocs\\www\\ecommerce\\frontend\\src\\actions\\users.js",[],"D:\\xampp\\htdocs\\www\\ecommerce\\frontend\\src\\helpers\\fileUpload.js",[],"D:\\xampp\\htdocs\\www\\ecommerce\\frontend\\src\\helpers\\swalCustom.js",[],"D:\\xampp\\htdocs\\www\\ecommerce\\frontend\\src\\Admin.js",[],"D:\\xampp\\htdocs\\www\\ecommerce\\frontend\\src\\Ecommerce.js",[],"D:\\xampp\\htdocs\\www\\ecommerce\\frontend\\src\\actions\\products.js",[],"D:\\xampp\\htdocs\\www\\ecommerce\\frontend\\src\\reducers\\productReducer.js",[],"D:\\xampp\\htdocs\\www\\ecommerce\\frontend\\src\\components\\ui\\Tables\\ProductTable.js",["203"],"import React, { useEffect, useRef, useState } from 'react'\r\n\r\nimport dayjs from 'dayjs'\r\nimport ReactPaginate from 'react-paginate'\r\nimport Select from 'react-select'\r\n\r\nimport { Btn } from '../Buttons/Btn';\r\nimport { Modal } from '../../shared/Modal';\r\nimport { ProductForm } from '../Forms/ProductForm';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { BtnFloat } from '../Buttons/BtnFloat';\r\n\r\nimport { startGettingCategories } from '../../../actions/categories';\r\nimport { startCleaningActiveProduct, startEditingProduct, startDeletingProduct } from '../../../actions/products';\r\n\r\nexport const ProductTable = ({columns, data:products}) => {\r\n    const [offset, setOffset] = useState(0);\r\n    const [perPage, setPerPage] = useState(5);\r\n    const [pageCount, setPageCount] = useState(0);\r\n    const [data, setData] = useState([]);\r\n    const [searchInput, setSearchInput] = useState('');\r\n    const [statusFilter, setStatusFilter] = useState(2);\r\n    const [discountFilter, setDiscountFilter] = useState(2);\r\n\r\n    const [openModal, setOpenModal] = useState(false);\r\n\r\n    const handleInputChange = (e) => {\r\n        setSearchInput(e.target.value)\r\n    }\r\n\r\n    const handleStatusFilter = (e) => {\r\n        setStatusFilter(parseInt(e.target.value));\r\n    }\r\n\r\n    const handleDiscountFilter = (e) => {\r\n        setDiscountFilter(parseInt(e.target.value));\r\n    }\r\n\r\n    const handleCreateProduct = () =>{\r\n        dispatch(startCleaningActiveProduct());\r\n        setOpenModal(true);\r\n    }\r\n\r\n    const handleEditProduct = (id, name, description, category_id, price, in_discount, discount, status, get_pictures) => {\r\n        const product = {\r\n            id,\r\n            name, \r\n            description, \r\n            category_id, \r\n            price, \r\n            in_discount, \r\n            discount, \r\n            status,\r\n            get_pictures\r\n        };\r\n        \r\n        dispatch(startEditingProduct(product));\r\n        setOpenModal(true);\r\n    }\r\n\r\n    const handleDeleteProduct = (id) => {\r\n        dispatch(startDeletingProduct(id));\r\n    }\r\n\r\n    const {productActive} = useSelector(state => state.products)\r\n\r\n    useEffect(() => {\r\n        let slice = [];\r\n        let productsFiltered = [];\r\n        if( searchInput !== ''){\r\n            productsFiltered.length > 0\r\n            ? productsFiltered = productsFiltered.filter( product => product.name.toLowerCase().includes(searchInput.toLowerCase()))\r\n            : productsFiltered = products.filter( product => product.name.toLowerCase().includes(searchInput.toLowerCase()))\r\n            slice = productsFiltered.slice(offset, offset + perPage)\r\n            setPageCount(Math.ceil(productsFiltered.length / perPage))\r\n        }\r\n\r\n        if( statusFilter !== 2){\r\n            productsFiltered.length > 0\r\n            ? productsFiltered = productsFiltered.filter( p => p.status === parseInt(statusFilter))\r\n            : productsFiltered = products.filter( p => p.status === parseInt(statusFilter))\r\n            \r\n            slice = productsFiltered.slice(offset, offset + perPage)\r\n            setPageCount(Math.ceil(productsFiltered.length / perPage))\r\n        }\r\n\r\n        if( discountFilter !== 2){\r\n            productsFiltered.length > 0\r\n            ? productsFiltered = productsFiltered.filter( p => p.in_discount === parseInt(discountFilter) )\r\n            : productsFiltered = products.filter( p => p.in_discount === parseInt(discountFilter) )\r\n            slice = productsFiltered.slice(offset, offset + perPage)\r\n            setPageCount(Math.ceil(productsFiltered.length / perPage))\r\n        }\r\n        \r\n        if(searchInput === '' && statusFilter === 2 && discountFilter === 2){\r\n            slice = products.slice(offset, offset + perPage)\r\n            setPageCount(Math.ceil(products.length / perPage))\r\n        }\r\n\r\n        const postData = slice.map( ({id, name, description, category_id, price, in_discount, discount, status, created_at, get_pictures}) => \r\n            <tr key={id}>\r\n                <td className=\"col-2\">{name}</td>\r\n                <td className=\"col-2\">{description}</td>\r\n                <td className=\"col-2\">{price}</td>\r\n                <td className=\"col-2\">{in_discount === 1 ? 'Yes' : 'No'}</td>\r\n                {\r\n                    (in_discount === 1)\r\n                    ? <td className=\"col-2\">{discount} %</td>\r\n                    : <td className=\"col-2\">-</td>\r\n                }\r\n                <td className=\"col-2\">{status === 1 ? 'Public' : 'Draft'}</td>\r\n                <td className=\"col-2\">{ dayjs(created_at).format('DD/MM/YYYY HH:mm:ss')}</td>\r\n                <td className=\"col-2 d-flex flex-wrap flex-row place-items-center\">\r\n                    <div onClick={() => handleEditProduct(id, name, description, category_id, price, in_discount, discount, status, get_pictures)}>\r\n                        <Btn color=\"edit\" md=\"3\" sm=\"3\" css=\"btn-options btn-sm mx-1 tooltip\">\r\n                            <i className=\"fas fa-pen\"></i>\r\n                            <span className=\"tooltiptext\">Edit product</span>\r\n                        </Btn>\r\n                    </div>\r\n                    <div onClick={() => handleDeleteProduct(id)}>\r\n                        <Btn color=\"delete\" md=\"3\" sm=\"3\" css=\"btn-options btn-sm mx-1 tooltip\">\r\n                            <i className=\"fas fa-trash\"></i>\r\n                            <span className=\"tooltiptext\">Delete product</span>\r\n                        </Btn>\r\n                    </div>\r\n                </td>\r\n            </tr>\r\n        );\r\n        setData(postData)\r\n        \r\n    }, [offset, perPage, products, searchInput, statusFilter, discountFilter])\r\n\r\n    \r\n    const dispatch = useDispatch();\r\n    useEffect(() => {\r\n        dispatch(startGettingCategories());\r\n    }, [dispatch])\r\n\r\n    const {categories} = useSelector(state => state.categories)\r\n\r\n    const [selectedOption, setSelectedOption] = useState({value: \"5\", label: \"5 items\"})\r\n    const options = [\r\n        { value: '5', label: '5 items' },\r\n        { value: '10', label: '10 items' },\r\n        { value: '15', label: '15 items' },\r\n    ];\r\n\r\n    const handlePageClick = (e) => {\r\n        const {selected} = e;\r\n        setOffset(selected * perPage)\r\n    };\r\n\r\n    const handleSelectItems = (e) =>{\r\n        setPerPage(e.value);\r\n        setSelectedOption(e);\r\n    }\r\n\r\n    const customStyles = {\r\n        option: (provided, state) => ({\r\n            ...provided,\r\n            borderBottom: '1px solid var(--border-color-table)',\r\n            color: state.isSelected ? 'var(--colorText)' : 'var(--main-color)',\r\n            padding: 5,\r\n            textAlign: 'left',\r\n        })\r\n    }\r\n\r\n    const filterRef = useRef();\r\n    const handleToggleFilter = () => {\r\n        filterRef.current.classList.toggle('d-none');\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div>\r\n                <div onClick={handleCreateProduct}>\r\n                    <BtnFloat color=\"create-full\"> \r\n                        <i className=\"fas fa-plus\"/>\r\n                        <span className=\"ml-3\">New product</span>\r\n                    </BtnFloat>\r\n                </div>\r\n            </div>\r\n            <div className=\"table__header \">\r\n                <div className=\"table__header-filters\">\r\n                    <div className=\"filter-options d-none\" ref={filterRef}>\r\n                        <div className=\"mr-2 ml-1\">\r\n                            <select defaultValue={statusFilter} onChange={handleStatusFilter}>\r\n                                <option value=\"0\">Draft</option>\r\n                                <option value=\"1\">Public</option>\r\n                                <option value=\"2\">Status</option>\r\n                            </select>\r\n                        </div>\r\n                        <div className=\"mr-2\">\r\n                            <select defaultValue={discountFilter} onChange={handleDiscountFilter}>\r\n                                <option value=\"0\">No</option>\r\n                                <option value=\"1\">Yes</option>\r\n                                <option value=\"2\">Discount?</option>\r\n                            </select>\r\n                        </div>\r\n                        <div className=\"searchInput\">\r\n                            <input \r\n                                type=\"text\" \r\n                                name=\"search\"\r\n                                value={searchInput}\r\n                                onChange={handleInputChange}\r\n                                placeholder=\"Search product\"\r\n                            />\r\n                            <div className=\"icon-search\">\r\n                                <i className=\"fas fa-search\"></i>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"btn-filter\">\r\n                        <i className=\"fas fa-filter p-2 pointer\" onClick={handleToggleFilter}/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <table>\r\n                <thead>\r\n                    <tr>\r\n                        {   \r\n                            columns.map( column => (\r\n                                <th className=\"col-2\" key={column}>{column}</th>\r\n                            ))\r\n                        }\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {\r\n                        data.length > 0\r\n                        ? (data)\r\n                        : (<tr>\r\n                           <td colSpan={columns.length} className=\"col-12 text-center\">No data found</td> \r\n                        </tr>)\r\n                    }\r\n                </tbody>\r\n            </table>\r\n\r\n            <div className=\"table__footer mt-5\">\r\n                <div className=\"subrow justify-content-center align-items-center\">\r\n                    {\r\n                        pageCount > 0\r\n                        &&\r\n                    \r\n                        <ReactPaginate\r\n                            previousLabel={<i className=\"fas fa-arrow-left\"></i>}\r\n                            nextLabel={<i className=\"fas fa-arrow-right\"></i>}\r\n                            breakLabel={\"...\"}\r\n                            breakClassName={\"break-me\"}\r\n                            pageCount={pageCount}\r\n                            marginPagesDisplayed={2}\r\n                            pageRangeDisplayed={3}\r\n                            onPageChange={handlePageClick}\r\n                            containerClassName={\"pagination\"}\r\n                            subContainerClassName={\"pages pagination\"}\r\n                            activeClassName={\"active\"}    \r\n                        />\r\n                    }\r\n                    {\r\n                        pageCount > 0\r\n                        &&\r\n\r\n                        <Select\r\n                            value={selectedOption}\r\n                            onChange={handleSelectItems}\r\n                            options={options}\r\n                            styles={customStyles}\r\n                        />\r\n                    }\r\n                    \r\n                </div>\r\n            </div>\r\n\r\n            {\r\n                Object.keys(productActive).length <= 0\r\n                ?\r\n                <Modal title=\"Add new product\" isOpen={openModal} onClose={() => setOpenModal(false)} >\r\n                    <ProductForm \r\n                        categories={categories} \r\n                        closeModal={()=>setOpenModal(false) } \r\n                        product={productActive}/>\r\n                </Modal>\r\n                :\r\n                <Modal title=\"Edit product\" isOpen={openModal} onClose={() => setOpenModal(false)} >\r\n                    <ProductForm \r\n                        categories={categories} \r\n                        closeModal={()=>setOpenModal(false)}\r\n                        product={productActive}\r\n                    />\r\n                </Modal>\r\n\r\n            }\r\n        </>\r\n    )\r\n}\r\n","D:\\xampp\\htdocs\\www\\ecommerce\\frontend\\src\\components\\ui\\Tables\\UserTable.js",["204"],"import React, { useEffect, useRef, useState } from 'react'\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport dayjs from 'dayjs'\r\nimport ReactPaginate from 'react-paginate';\r\nimport Select from 'react-select';\r\nimport Swal from 'sweetalert2';\r\n\r\nimport { Btn } from '../Buttons/Btn';\r\nimport { swalCustomStyle } from '../../../helpers/swalCustom';\r\nimport { startBanningUser, startRemovingBanUser } from '../../../actions/users';\r\nimport { startRecover } from '../../../actions/auth';\r\n\r\n\r\nexport const UserTable = ({columns, data:users}) => {\r\n    \r\n    const [offset, setOffset] = useState(0);\r\n    const [data, setData] = useState([]);\r\n    const [perPage, setPerPage] = useState(5);\r\n    const [pageCount, setPageCount] = useState(0);\r\n    const [searchInput, setSearchInput] = useState('');\r\n\r\n    const dispatch = useDispatch();\r\n    \r\n    const handleInputChange = (e) => {\r\n        setSearchInput(e.target.value)\r\n    }\r\n\r\n    const handleSentRecoveryPassword = (email) => {\r\n        swalCustomStyle.fire({\r\n            title: 'Are you sure?',\r\n            text: \"If you confirm this action, it will send an email to the user with a recovery code to recover the password\",\r\n            icon: 'warning',\r\n            showCancelButton: true,\r\n            confirmButtonText: 'Yes, send it!',\r\n            cancelButtonText: 'No, cancel!',\r\n            reverseButtons: true,\r\n            focusCancel: true,\r\n          }).then((result) => {\r\n            if (result.isConfirmed) {\r\n                dispatch(startRecover(email));\r\n                swalCustomStyle.fire({\r\n                    icon: 'info',\r\n                    title: 'Sending email...',\r\n                    showConfirmButton: false,\r\n                    timer: 1500\r\n                })\r\n            } else if (result.dismiss === Swal.DismissReason.cancel) {\r\n                swalCustomStyle.fire('Cancelled','Your didn\\'t sent a recovery password email','error')\r\n            }\r\n          })\r\n    }\r\n    const handleBanUser = (id) => {\r\n        swalCustomStyle.fire({\r\n            title: 'Are you sure?',\r\n            text: \"If you confirm this action, it will ban the user and he/she will not be able to log in to the website\",\r\n            icon: 'warning',\r\n            showCancelButton: true,\r\n            confirmButtonText: 'Yes, ban it!',\r\n            cancelButtonText: 'No, cancel!',\r\n            reverseButtons: true,\r\n            focusCancel: true,\r\n          }).then((result) => {\r\n            if (result.isConfirmed) {\r\n                dispatch(startBanningUser(id));\r\n                swalCustomStyle.fire({\r\n                    icon: 'info',\r\n                    title: 'Banning user...',\r\n                    showConfirmButton: false,\r\n                    timer: 1500\r\n                })\r\n            } else if (result.dismiss === Swal.DismissReason.cancel) {\r\n                swalCustomStyle.fire('Cancelled','Your didn\\'t ban this user','error')\r\n            }\r\n          })\r\n    }\r\n\r\n    const handleRemoveBanUser = (id) => {\r\n        swalCustomStyle.fire({\r\n            title: 'Are you sure?',\r\n            text: \"If you confirm this action, it will remove the ban to the user and he/she will be able to log in to the website\",\r\n            icon: 'warning',\r\n            showCancelButton: true,\r\n            confirmButtonText: 'Yes, remove it!',\r\n            cancelButtonText: 'No, cancel!',\r\n            reverseButtons: true,\r\n            focusCancel: true,\r\n          }).then((result) => {\r\n            if (result.isConfirmed) {\r\n                dispatch(startRemovingBanUser(id));\r\n                swalCustomStyle.fire({\r\n                    icon: 'info',\r\n                    title: 'Removing ban to the user...',\r\n                    showConfirmButton: false,\r\n                    timer: 1500\r\n                })\r\n            } else if (result.dismiss === Swal.DismissReason.cancel) {\r\n                swalCustomStyle.fire('Cancelled','This user is still banned','error')\r\n            }\r\n          })\r\n    }\r\n\r\n    useEffect(() => {\r\n        let slice = [];\r\n        if( searchInput !== ''){\r\n            const usersFiltered = users.filter( user => user.email.toLowerCase().includes(searchInput.toLowerCase()))\r\n            slice = usersFiltered.slice(offset, offset + perPage)\r\n            setPageCount(Math.ceil(usersFiltered.length / perPage))\r\n        }else{\r\n            slice = users.slice(offset, offset + perPage)\r\n            setPageCount(Math.ceil(users.length / perPage))\r\n        }\r\n        const postData = slice.map( ({id, name, lastname, email, role, status, last_connection}) => \r\n            <tr key={id}>\r\n                <td className=\"col-2\">{name}</td>\r\n                <td className=\"col-2\">{lastname}</td>\r\n                <td className=\"col-2\">{email}</td>\r\n                <td className=\"col-2\">{role === 1 ? 'Admin' : 'Customer'}</td>\r\n                <td className=\"col-2\">{status === 1 ? 'Banned' : 'Authorized'}</td>\r\n                {/* Cambiar update_at por last_conection que se guardará cada vez que actualice el token  */}\r\n                <td className=\"col-2\">{ \r\n                    last_connection\r\n                    ? dayjs(last_connection).format('DD/MM/YYYY HH:m:s')\r\n                    : '-'\r\n                    }\r\n                </td>\r\n                <td className=\"col-2 d-flex flex-wrap flex-row place-items-center\">\r\n                    <div onClick={() => handleSentRecoveryPassword(email)}>\r\n                        <Btn color=\"create\" md=\"3\" sm=\"3\" css=\"btn-options btn-sm mx-1 tooltip\">\r\n                            <i className=\"fas fa-paper-plane\"></i>\r\n                            <span className=\"tooltiptext\">Recovery password</span>\r\n                        </Btn>\r\n                    </div>\r\n                    {\r\n                        status === 0\r\n                        ?\r\n                        <div onClick={() => handleBanUser(id)}>\r\n                            <Btn color=\"delete\" md=\"3\" sm=\"3\" css=\"btn-options btn-sm mx-1 tooltip\">\r\n                                <i className=\"fas fa-ban\"></i>\r\n                                <span className=\"tooltiptext\">Ban user</span>\r\n                            </Btn>\r\n                        </div>\r\n                        :\r\n                        <div onClick={() => handleRemoveBanUser(id)}>\r\n                            <Btn color=\"create\" md=\"3\" sm=\"3\" css=\"btn-options btn-sm mx-1 tooltip\">\r\n                                <i className=\"fas fa-check-circle\"></i>\r\n                                <span className=\"tooltiptext\">Remove ban</span>\r\n                            </Btn>\r\n                        </div>\r\n                    }\r\n                </td>\r\n            </tr>\r\n        );\r\n        setData(postData)\r\n    }, [offset, perPage, users, searchInput])\r\n\r\n    const [selectedOption, setSelectedOption] = useState({value: \"5\", label: \"5 items\"})\r\n    const options = [\r\n        { value: '5', label: '5 items' },\r\n        { value: '10', label: '10 items' },\r\n        { value: '15', label: '15 items' },\r\n    ];\r\n\r\n    const handlePageClick = (e) => {\r\n        const {selected} = e;\r\n        setOffset(selected * perPage)\r\n    };\r\n\r\n    const handleSelectItems = (e) =>{\r\n        setPerPage(e.value);\r\n        setSelectedOption(e);\r\n    }\r\n\r\n    const customStyles = {\r\n        option: (provided, state) => ({\r\n            ...provided,\r\n            borderBottom: '1px solid var(--border-color-table)',\r\n            color: state.isSelected ? 'var(--colorText)' : 'var(--main-color)',\r\n            padding: 5,\r\n            textAlign: 'left',\r\n        })\r\n    }\r\n\r\n    const filterRef = useRef();\r\n\r\n    const handleToggleFilter = () => {\r\n        filterRef.current.classList.toggle('d-none');\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"table__header\">\r\n                <div className=\"table__header-filters\">\r\n                    <div className=\"filter-options d-none\" ref={filterRef}>\r\n                        <div className=\"searchInput ml-1\">\r\n                            <input \r\n                                type=\"text\" \r\n                                name=\"search\"\r\n                                value={searchInput}\r\n                                onChange={handleInputChange}\r\n                                placeholder=\"Search email\"\r\n                            />\r\n                            <div className=\"icon-search\">\r\n                                <i className=\"fas fa-search\"></i>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"btn-filter\">\r\n                        <i className=\"fas fa-filter p-2 pointer\" onClick={handleToggleFilter}/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <table>\r\n                <thead>\r\n                    <tr>\r\n                        {   \r\n                            columns.map( column => (\r\n                                <th className=\"col-2\" key={column}>{column}</th>\r\n                            ))\r\n                        }\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {\r\n                        data.length > 0\r\n                        ? (data)\r\n                        : (<tr>\r\n                           <td colSpan={columns.length} className=\"col-12 text-center\">No data found</td> \r\n                        </tr>)\r\n                    }\r\n                </tbody>\r\n            </table>\r\n\r\n            <div className=\"table__footer mt-5\">\r\n                <div className=\"subrow justify-content-center align-items-center\">\r\n                    {\r\n                        pageCount > 0\r\n                        &&\r\n                    \r\n                        <ReactPaginate\r\n                            previousLabel={<i className=\"fas fa-arrow-left\"></i>}\r\n                            nextLabel={<i className=\"fas fa-arrow-right\"></i>}\r\n                            breakLabel={\"...\"}\r\n                            breakClassName={\"break-me\"}\r\n                            pageCount={pageCount}\r\n                            marginPagesDisplayed={2}\r\n                            pageRangeDisplayed={3}\r\n                            onPageChange={handlePageClick}\r\n                            containerClassName={\"pagination\"}\r\n                            subContainerClassName={\"pages pagination\"}\r\n                            activeClassName={\"active\"}    \r\n                        />\r\n                    }\r\n                    {\r\n                        pageCount > 0\r\n                        &&\r\n\r\n                        <Select\r\n                            value={selectedOption}\r\n                            onChange={handleSelectItems}\r\n                            options={options}\r\n                            styles={customStyles}\r\n                        />\r\n                    }\r\n                    \r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","D:\\xampp\\htdocs\\www\\ecommerce\\frontend\\src\\reducers\\categoryReducer.js",[],"D:\\xampp\\htdocs\\www\\ecommerce\\frontend\\src\\actions\\categories.js",[],"D:\\xampp\\htdocs\\www\\ecommerce\\frontend\\src\\components\\ui\\Buttons\\BtnFloat.js",[],"D:\\xampp\\htdocs\\www\\ecommerce\\frontend\\src\\components\\ui\\Forms\\ProductForm.js",["205"],"import React, { useCallback, useEffect, useRef, useState } from 'react'\r\nimport { useDispatch } from 'react-redux';\r\nimport { startCleaningActiveProduct, startCreatingProduct, startDeletingPicture, startUpdatingProduct } from '../../../actions/products';\r\nimport { useForm } from '../../../hooks/useForm'\r\nimport { BtnSubmit } from '../Buttons/BtnSubmit';\r\n\r\nexport const ProductForm = ({categories, closeModal, product}) => {\r\n    \r\n    \r\n    const { id, name:ename, description:edescription, price:eprice, status:estatus, in_discount:ein_discount, discount:ediscount, category_id:ecategory, get_pictures } = product;\r\n    const [formData, handleInputChange, handleInputFileChange] = useForm({\r\n        name: ename || '11asd',\r\n        description: edescription || 'asd',\r\n        price: eprice || '1',\r\n        status: estatus || '',\r\n        in_discount: ein_discount || '',\r\n        discount: ediscount || '',\r\n        category: ecategory || '1',\r\n        gallery: get_pictures || []\r\n    });\r\n    \r\n    let { name, description, price, status, in_discount, discount, category, gallery } = formData;\r\n    useEffect((useForm) => {\r\n    },[gallery])\r\n\r\n    const [hasError, setHasError] = useState([]);\r\n\r\n    const dispatch = useDispatch();\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        setHasError([]);\r\n        if( category === '0'){\r\n            setHasError([\r\n                ...hasError,\r\n                'The category field is required'\r\n            ])\r\n            return;\r\n        }\r\n        \r\n        if(Object.keys(product).length <= 0){\r\n            dispatch(startCreatingProduct(name, description, price, status, in_discount, discount, category, gallery));\r\n            closeModal && closeModal()\r\n        }else{\r\n            dispatch(startUpdatingProduct(id, name, description, price, status, in_discount, discount, category, gallery));\r\n            dispatch(startCleaningActiveProduct);\r\n            closeModal && closeModal()\r\n        }\r\n    }\r\n\r\n    const inputGalleryAdd = useRef();\r\n    const handleAddPicture = () => {\r\n        inputGalleryAdd.current.click();\r\n    }\r\n\r\n    const handleGalleryChange = () => {\r\n        setHasError([]);\r\n\r\n        if(inputGalleryAdd.current.files.length > 5){\r\n            setHasError([\r\n                ...hasError,\r\n                'Maximun 5 pictures allowed'\r\n            ])\r\n        }else{\r\n            handleInputFileChange(inputGalleryAdd.current, inputGalleryAdd.current.files)\r\n        }\r\n    }\r\n\r\n    const handleDeletePicture = (id) => {\r\n        dispatch(startDeletingPicture(id))\r\n        gallery = gallery.filter( picture => picture.id !== id)\r\n    }\r\n\r\n    \r\n\r\n    const baseImgUrl = process.env.REACT_APP_IMG_STORAGE_API_URL;\r\n\r\n    return (\r\n        <>  \r\n            { \r\n                hasError.length > 0 && \r\n                <div className=\"alert alert-danger\">\r\n                    <h4>Error:</h4>\r\n                    <ul>\r\n                        {\r\n                            hasError.map( (e, key) => <li key={key}>\r\n                                {e}\r\n                            </li>\r\n                        )}\r\n                    </ul>\r\n                </div>\r\n            }\r\n\r\n            <form onSubmit={handleSubmit} encType=\"multipart/form-data\">\r\n                <div className=\"row\">\r\n                    <div className=\"form-content col-8 col-sm-12\">\r\n                        <label className=\"col-12 col-sm-12\">\r\n                            Name: <br/>\r\n                            <input \r\n                                type=\"text\" \r\n                                required\r\n                                name=\"name\" \r\n                                value={name}\r\n                                onChange={handleInputChange}\r\n                            />\r\n                        </label>\r\n                        <label className=\"col-12 col-sm-12\">\r\n                            Description: <br/>\r\n                            <textarea \r\n                                name=\"description\" \r\n                                required\r\n                                value={description}\r\n                                onChange={handleInputChange}\r\n                            />\r\n                        </label>\r\n                        <label className=\"col-12 col-sm-12\">\r\n                            Category <br/>\r\n                            <select name=\"category\" onChange={handleInputChange} defaultValue={category} required>\r\n                                <option className=\"option\" value=\"0\">Select category...</option>\r\n                                {\r\n                                    categories.map( ({id, name}) => \r\n                                        <option className=\"option\" key={id} value={id}>{name}</option>\r\n                                    )\r\n                                }\r\n                            </select>\r\n                        </label>\r\n                        <div className=\"row\">\r\n                            <label className=\"col-6 col-sm-12 \">\r\n                                Price: <br/>\r\n                                <input \r\n                                    type=\"number\" \r\n                                    name=\"price\" \r\n                                    required\r\n                                    value={price}\r\n                                    onChange={handleInputChange}\r\n                                />\r\n                            </label>\r\n                            <label className=\"col-6 col-sm-12 flex-1 ml-2\">\r\n                                Status <br/>\r\n                                <select name=\"status\" onChange={handleInputChange} defaultValue={status || 0}>\r\n                                    <option className=\"option\" value=\"0\">Draft</option>\r\n                                    <option className=\"option\" value=\"1\">Public</option>\r\n                                </select>\r\n                            </label>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <label className=\"col-6 col-sm-12\">\r\n                                In discount? <br/>\r\n                                <select name=\"in_discount\" onChange={handleInputChange} defaultValue={in_discount || 0}>\r\n                                    <option className=\"option\" value=\"0\">No</option>\r\n                                    <option className=\"option\" value=\"1\">Yes</option>\r\n                                </select>\r\n                            </label>\r\n                            {\r\n                                (in_discount === 1 || in_discount === \"1\") && \r\n                                ( \r\n                                    <label className=\"col-6 col-sm-12 flex-1 ml-2\">\r\n                                        Discount (%): <br/>\r\n                                        <input \r\n                                            type=\"number\" \r\n                                            name=\"discount\" \r\n                                            value={discount}\r\n                                            onChange={handleInputChange}\r\n                                        />\r\n                                    </label> \r\n                                )\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-4 col-sm-12 flex-1 ml-2\">\r\n                        <div className=\"gallery\">\r\n                            <input type=\"file\" name=\"gallery\" multiple ref={inputGalleryAdd} onChange={handleGalleryChange} accept=\"image/*\" className=\"d-none\"/>\r\n                            <label>\r\n                                Gallery <small>( Max 5 pictures )</small>\r\n                                {\r\n                                    gallery.length < 5 &&\r\n                                    <div className=\"btn-add-pictures my-2\" onClick={handleAddPicture}>\r\n                                        <i className=\"fas fa-plus\" aria-hidden=\"true\"></i>\r\n                                    </div>\r\n\r\n                                }\r\n                            </label>\r\n                            <div className=\"text-center\">\r\n                                {\r\n                                    gallery.length === 0 &&\r\n                                    <p>\r\n                                        {gallery.length} pictures <br/>selected to upload\r\n                                    </p>\r\n                                }\r\n                                \r\n                                {   \r\n                                    <div className=\"product-gallery col-12\">\r\n                                        {\r\n                                            gallery?.map( ({file_name, id:img_id}) => \r\n                                                file_name &&\r\n                                                <div className=\"picture\">\r\n                                                    <img key={img_id} src={`${baseImgUrl}products/${id}/${file_name}`} alt=\"\"/>\r\n                                                    <i onClick={() => handleDeletePicture(img_id)} className=\"fas fa-minus\"/>\r\n                                                </div>\r\n                                            )\r\n                                        }\r\n                                    </div>\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"row mt-4\">\r\n                {\r\n                    Object.keys(product).length === 0\r\n                    ?\r\n                    <BtnSubmit color=\"create\" block sm=\"12\" md=\"12\">Create product</BtnSubmit>\r\n                    :\r\n                    <BtnSubmit color=\"edit\" block sm=\"12\" md=\"12\">Edit product</BtnSubmit>\r\n                }\r\n            </div>\r\n        </form>\r\n        </>\r\n    )\r\n}\r\n",["206","207"],"D:\\xampp\\htdocs\\www\\ecommerce\\frontend\\src\\components\\shared\\Modal.js",[],"D:\\xampp\\htdocs\\www\\ecommerce\\frontend\\src\\components\\shared\\DateComponent.js",[],"D:\\xampp\\htdocs\\www\\ecommerce\\frontend\\src\\components\\pages\\categories\\CategoryScreen.js",["208","209"],"import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { DateComponent } from '../../shared/DateComponent'\r\n\r\nimport { startGettingCategories } from '../../../actions/categories';\r\nimport { Banner } from '../../ui/Banners/Banner';\r\n\r\nexport const CategoryScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    useEffect(() => {\r\n        dispatch(startGettingCategories());\r\n    }, [dispatch])\r\n\r\n    // Table\r\n    const {categories} = useSelector(state => state.categories)\r\n    //  Category type: main || subcategory\r\n    // If it's a subcategory, Category main will be the name of the father category\r\n    const colums = [\"Name\", \"Description\", \"Category type\", \"Category main\", \"Created_at\", \"Actions\"];\r\n\r\n\r\n    const categoriesMain = categories.filter( category => category.main_category === null).length;\r\n    \r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-12\">\r\n                    <h1>Categories</h1>\r\n                    <DateComponent/>\r\n                </div>\r\n            </div>\r\n            <div className=\"flex-break\"><br/></div>\r\n            <div className=\"row justify-content-start\">\r\n                <Banner color=\"success\" md=\"3\" sm=\"12\" css=\"m-1\" icon=\"fas fa-check\">\r\n                    <p>12</p>\r\n                    <small>Total categories</small>\r\n                </Banner>\r\n                \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","D:\\xampp\\htdocs\\www\\ecommerce\\frontend\\src\\components\\ui\\Banners\\Banner.js",[],{"ruleId":"210","replacedBy":"211"},{"ruleId":"212","replacedBy":"213"},{"ruleId":"214","severity":1,"message":"215","line":4,"column":10,"nodeType":"216","messageId":"217","endLine":4,"endColumn":14},{"ruleId":"210","replacedBy":"218"},{"ruleId":"212","replacedBy":"219"},{"ruleId":"220","severity":1,"message":"221","line":131,"column":8,"nodeType":"222","endLine":131,"endColumn":78,"suggestions":"223"},{"ruleId":"220","severity":1,"message":"224","line":155,"column":8,"nodeType":"222","endLine":155,"endColumn":45,"suggestions":"225"},{"ruleId":"214","severity":1,"message":"226","line":1,"column":17,"nodeType":"216","messageId":"217","endLine":1,"endColumn":28},{"ruleId":"210","replacedBy":"227"},{"ruleId":"212","replacedBy":"228"},{"ruleId":"214","severity":1,"message":"229","line":20,"column":11,"nodeType":"216","messageId":"217","endLine":20,"endColumn":17},{"ruleId":"214","severity":1,"message":"230","line":23,"column":11,"nodeType":"216","messageId":"217","endLine":23,"endColumn":25},"no-native-reassign",["231"],"no-negated-in-lhs",["232"],"no-unused-vars","'Card' is defined but never used.","Identifier","unusedVar",["231"],["232"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'handleDeleteProduct' and 'handleEditProduct'. Either include them or remove the dependency array.","ArrayExpression",["233"],"React Hook useEffect has missing dependencies: 'handleBanUser', 'handleRemoveBanUser', and 'handleSentRecoveryPassword'. Either include them or remove the dependency array.",["234"],"'useCallback' is defined but never used.",["231"],["232"],"'colums' is assigned a value but never used.","'categoriesMain' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"235","fix":"236"},{"desc":"237","fix":"238"},"Update the dependencies array to be: [offset, perPage, products, searchInput, statusFilter, discountFilter, handleEditProduct, handleDeleteProduct]",{"range":"239","text":"240"},"Update the dependencies array to be: [offset, perPage, users, searchInput, handleSentRecoveryPassword, handleBanUser, handleRemoveBanUser]",{"range":"241","text":"242"},[5606,5676],"[offset, perPage, products, searchInput, statusFilter, discountFilter, handleEditProduct, handleDeleteProduct]",[6746,6783],"[offset, perPage, users, searchInput, handleSentRecoveryPassword, handleBanUser, handleRemoveBanUser]"]